// fade function from https://gitlab.kh-berlin.de/elab/examples/arduino-sine-fade/-/blob/main/sine_fade/sine_fade.ino
#include <AccelStepper.h>  // from https://www.airspayce.com/mikem/arduino/AccelStepper/

//https://www.arduino.cc/reference/en/language/functions/time/millis/ <- for later reference concerning threading
//https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/system/pthread.html <- for later reference concerning threading


// https://www.rapidtables.com/web/color/RGB_Color.html for the colour codes

AccelStepper stepper1(AccelStepper::DRIVER, 18, 5);  //STEP then DIR

const float MS = 16.00;    // Put the Number of Microsteps defined through the 3 pins on the A4988 here. remember to add two decimals: "xx.00"
const float SPR = 200.00;  // Put the Number of Steps your specific stepper takes per revolution. remember to add two decimals: "xx.00"

//The Ratio allows to input the desired position in revolutions instead of steps.
const float Ratio1 = ((MS * (SPR / 360.00)) * 360.00);  //((MicroSteps * (full steps per revolution / full revolution in degrees)) || Decimal places for more precise float values




//––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––

int pinR = 15;
int pinG = 2;
int pinB = 4;

byte stepcount = 1; //counter for rotations;
byte ValR = 0;
byte ValG = 0;
int counter = 0; //counter for offset for fadetocolour function

bool fadeON = false;

bool isWhite = true;

int HR = 125; // trial heart rate <- needs to be adjusted in terms of individual base rate
int stage = -1; // initialisation for 2nd switch case

// Stage 1: ~ 80 -> 90

int R1 = 0;
int G1 = 0;
int BE1 = 255;

// Stage 2: ~ 90 -> 100

int R2 = 0;
int G2 = 0;
int B2 = 255;

// Stage 3: ~ 100 -> 110

int R3 = 51;
int G3 = 51;
int B3 = 255;

// Stage 4: ~ 110 -> 120

int R4 = 102;
int G4 = 102;
int B4 = 255;


// Stage 5: > 120

int R5 = 255;
int G5 = 255;
int B5 = 255;


//Acceleration

float AC = 3000.00; 

//––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––



void setup() {
  
 Serial.begin(115200);

  //For Motor
  stepper1.setMaxSpeed(2000);
  stepper1.setAcceleration(AC);

  //For LED
  pinMode(pinR, OUTPUT);
  pinMode(pinG, OUTPUT);
  pinMode(pinB, OUTPUT);


  // depending on HR switch to inital stage <- also need for individual base rate adjustment
  
    switch(HR){
    
    case 80 ... 89:
      ValR = R1;
      ValG = G1;
      analogWrite(pinR, R1);
      analogWrite(pinG, G1);
      analogWrite(pinB, BE1);
      break;

    case 90 ... 99:
      ValR = R2;
      ValG = G2;
      analogWrite(pinR, R2);
      analogWrite(pinG, G2);
      analogWrite(pinB, B2);
      break;

    case 100 ... 109:
      ValR = R3;
      ValG = G3;
      analogWrite(pinR, R3);
      analogWrite(pinG, G3);
      analogWrite(pinB, B3);
      break;

    case 110 ... 119:
      ValR = R4;
      ValG = G4;
      analogWrite(pinR, R4);
      analogWrite(pinG, G4);
      analogWrite(pinB, B4);
      break;

    case 120 ... 130:
      ValR = R5;
      ValG = G5;
      analogWrite(pinR, R5);
      analogWrite(pinG, G5);
      analogWrite(pinB, B5);
      break;
  }

  }

void loop() {
  
  stepper1.run();
  
  if (stepper1.distanceToGo() == 0) {
    if (!fadeON) {
      counter = counter + 5;
      fadetocolour(pinR, pinG);
      stepper1.moveTo(stepcount * Ratio1);  //go to a new position, in this case always 1 rotation further in same direction
      stepcount = stepcount + 1;
      fadeON = true;
    } else {
      counter = counter + 5;
      fadetocolour(pinR, pinG);
      stepper1.moveTo(stepcount * Ratio1);  //go to a new position, in this case always 1 rotation further in same direction
      stepcount = stepcount + 1;
      fadeON = false;
    }
  }
}


void fadetocolour (int pinA, int pinB) { //gradually decreases both green and red light so everything turns bluer and bluer

  byte ValA = ValA - counter;
  byte ValB = ValB - counter;
  analogWrite(pinA, ValA);
  analogWrite(pinB, ValB);
  delay(180.00);
  
}
